package com.szymonfluder.raports.dao.impl;import com.szymonfluder.raports.Entity.Employee;import com.szymonfluder.raports.dao.EmployeeDAO;import jakarta.persistence.EntityManager;import jakarta.persistence.Query;import jakarta.persistence.TypedQuery;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Repository;import org.springframework.transaction.annotation.Transactional;import java.util.List;@Repositorypublic class EmployeeDAOImpl implements EmployeeDAO {    private final EntityManager entityManager;    @Autowired    public EmployeeDAOImpl(EntityManager entityManager) {        this.entityManager = entityManager;    }    @Override    @Transactional    public void addEmployee(Employee employee) {        Query query = entityManager.createNativeQuery("INSERT INTO Employee (first_name, last_name, email) VALUES (?, ?, ?)");        query.setParameter(1, employee.getFirstName());        query.setParameter(2, employee.getLastName());        query.setParameter(3, employee.getEmail());        query.executeUpdate();    }    @Override    public Employee getEmployeeById(int id) {        TypedQuery<Employee> query = entityManager.createQuery("SELECT u FROM Employee u WHERE u.id=:id", Employee.class);        query.setParameter("id", id);        return query.getSingleResult();    }    @Override    public List<Employee> getAllEmployees() {        TypedQuery<Employee> query = entityManager.createQuery("FROM Employee", Employee.class);        return query.getResultList();    }    @Override    @Transactional    public void deleteEmployeeById(int id) {        Query query = entityManager.createQuery("DELETE FROM Employee e WHERE e.id=:id");        query.setParameter("id", id);        int num = query.executeUpdate();    }    @Override    @Transactional    public void updateEmployee(int id, Employee employee) {        Query query = entityManager.createQuery("UPDATE Employee " +                "SET firstName =:firstName, lastName =:lastName, email =:email " +                "WHERE id=:id");        query.setParameter("firstName", employee.getFirstName());        query.setParameter("lastName", employee.getLastName());        query.setParameter("email", employee.getEmail());        query.setParameter("id", id);        query.executeUpdate();    }}